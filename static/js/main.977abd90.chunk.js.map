{"version":3,"sources":["scratch.js","index.js"],"names":["strings","clearState","Box","param","clsname","className","state","onClick","index","score","arr","i","length","p","q","r","minimax","ismax","temp","value","check","Math","max","min","App","useState","gameState","updateGameState","isXChance","updateIsXChance","playernumber","updateplayer","onUserClicked","Array","from","idx","curr","bestindex","clearGame","useEffect","winner","checkWinner","alert","class","role","style","margin","type","name","id","autocomplete","for","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.977abd90.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport './style.css'\r\nconst clearState = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\r\nlet strings;\r\nconst Box = (param) => {\r\n    const clsname = (param.className ? `${param.className} square` : `square`)\r\n    return (\r\n        <span\r\n            className={clsname + (param.state === \"X\" ? ` color1` : ` color2`)}\r\n            onClick={() => param.onClick(param.index)}>\r\n           {param.state}\r\n        </span>\r\n    )\r\n}\r\nfunction score()\r\n{\r\n    let val=0;\r\n    const arr = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < arr.length; i++) {\r\n        const [p, q, r] = arr[i];\r\n        if (strings[p] && strings[p] === strings[q] && strings[p] === strings[r]) {\r\n            if(strings[p]===\"X\")\r\n            return 1;\r\n            else\r\n            return -1;\r\n        }\r\n    }\r\n    return val;\r\n}\r\nfunction minimax(ismax)\r\n{\r\n    let value=ismax?-50:50;\r\n    let check=false,temp; \r\n    temp=score();\r\n    if(temp)\r\n    return temp;\r\n    for(let i=0;i<9;i++)\r\n    {\r\n        if(strings[i]===\"\"){\r\n            check=true;\r\n            strings[i]=ismax?\"X\":\"0\";\r\n            temp=minimax(!ismax);\r\n            if(ismax)\r\n            value=Math.max(value,temp);\r\n            else\r\n            value=Math.min(value,temp);\r\n            strings[i]=\"\";\r\n        }\r\n    }\r\n    if(!check)\r\n    value=score();\r\n    return value;\r\n}\r\nfunction bestindex()\r\n{\r\n    let idx;\r\n    let curr=-50,temp; \r\n    for(let i=0;i<9;i++)\r\n    {\r\n        if(strings[i]===\"\"){\r\n            strings[i]=\"X\";\r\n            temp=minimax(false);\r\n            if(temp>curr)\r\n            {\r\n                curr=temp;\r\n                idx=i;\r\n            }\r\n            strings[i]=\"\";\r\n        }\r\n    }\r\nreturn idx;\r\n}\r\nfunction App() {\r\n    const [gameState, updateGameState] = useState(clearState)\r\n    const [isXChance, updateIsXChance] = useState(false)\r\n    const [playernumber, updateplayer] = useState(2)\r\n    const onUserClicked = (index) => {\r\n        strings = Array.from(gameState);\r\n        if (strings[index])\r\n            return;\r\n        if(playernumber===2){\r\n        strings[index] = isXChance ? \"X\" : \"0\";\r\n        updateIsXChance(!isXChance)\r\n        updateGameState(strings)  \r\n        }\r\n        else{\r\n            if(!isXChance)\r\n            {\r\n                strings[index]=\"0\";\r\n                let idx=bestindex();\r\n                strings[idx]=\"X\";\r\n                updateGameState(strings)     \r\n            }    \r\n        }        \r\n    }\r\n    const clearGame = () => {\r\n        updateIsXChance(false)\r\n        updateGameState(clearState)\r\n    }\r\n    useEffect(() => {\r\n        const checkWinner = () => {\r\n            let check=true;\r\n            const arr = [\r\n                [0, 1, 2],\r\n                [3, 4, 5],\r\n                [6, 7, 8],\r\n                [0, 3, 6],\r\n                [1, 4, 7],\r\n                [2, 5, 8],\r\n                [0, 4, 8],\r\n                [2, 4, 6],\r\n            ];\r\n            for (let i = 0; i < arr.length; i++) {\r\n                const [p, q, r] = arr[i];\r\n                if (gameState[p] && gameState[p] === gameState[q] && gameState[p] === gameState[r]) {\r\n                    if(gameState[p]===\"X\")\r\n                        return -1;\r\n                    else\r\n                       return 1;\r\n                }\r\n                if((gameState[p]===\"\")||(gameState[q]===\"\")||(gameState[r]===\"\"))\r\n                   check=false;\r\n            }\r\n            if(check)\r\n            return 2;\r\n            return null;\r\n        }\r\n        let winner = checkWinner();\r\n        if (winner===1) {\r\n            clearGame();\r\n            alert(`Player 1 won the Game !`)\r\n        }\r\n        if (winner===-1) {\r\n            clearGame();\r\n            alert(`Player 2 won the Game !`)\r\n        }\r\n        if (winner===2) {\r\n            clearGame();\r\n            alert(`Its a tie !`)\r\n        }\r\n        \r\n    }, [gameState])\r\n    return (\r\n        <>\r\n        <div className=\"container-fluid text-center\">\r\n            <h1>Tic Tac Toe </h1>\r\n            <div class=\"btn-group\" role=\"group\" aria-label=\"Basic radio toggle button group\" style={{margin:\"10px\"}}>\r\n            <input type=\"radio\" class=\"btn-check\" name=\"btnradio\" id=\"btnradio1\" autocomplete=\"off\" onClick={() => {clearGame(); updateplayer(1)}} />\r\n            <label class=\"btn btn-outline-dark\" for=\"btnradio1\">1 Player </label>\r\n            <input type=\"radio\" class=\"btn-check\" name=\"btnradio\" id=\"btnradio2\" autocomplete=\"off\" onClick={() => {clearGame(); updateplayer(2)}} />\r\n            <label class=\"btn btn-outline-dark\" for=\"btnradio2\">2 Player</label>\r\n            </div>\r\n            <div className=\"d-flex justify-content-center\">\r\n                <Box className=\"b-r b-b\" onClick={() => onUserClicked(0)} state={gameState[0]}/>\r\n                <Box className=\"b-r b-b\" onClick={() => onUserClicked(1)} state={gameState[1]}/>\r\n                <Box className=\"b-b\" onClick={() => onUserClicked(2)} state={gameState[2]}/>\r\n            </div>\r\n            <div className=\"d-flex justify-content-center\">\r\n                <Box className=\"b-r b-b\" onClick={() => onUserClicked(3)} state={gameState[3]}/>\r\n                <Box className=\"b-r b-b\" onClick={() => onUserClicked(4)} state={gameState[4]}/>\r\n                <Box className=\"b-b\" onClick={() => onUserClicked(5)} state={gameState[5]}/>\r\n            </div>\r\n            <div className=\"d-flex justify-content-center\">\r\n                <Box className=\"b-r\" onClick={() => onUserClicked(6)} state={gameState[6]}/>\r\n                <Box className=\"b-r\" onClick={() => onUserClicked(7)} state={gameState[7]}/>\r\n                <Box onClick={() => onUserClicked(8)} state={gameState[8]}/>\r\n            </div>\r\n            <button className=\"btn btn-outline-dark\" onClick={clearGame} style={{margin:\"20px\"}}>  Play Again</button>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './scratch'\nReactDOM.render(\n  <App/>,document.getElementById(\"root\")\n);"],"sourceRoot":""}